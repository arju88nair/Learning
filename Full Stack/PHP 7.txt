Scalar type declarations, has been introduced. Scalar type declaration has two options âˆ’
coercive - coercive is default mode and need not to be specified.
	<?php
   // Coercive mode
   function sum(int ...$ints) {
      return array_sum($ints);
   }
   print(sum(2, '3', 4.1));

strict - strict mode has to explicitly hinted.
	<?php
   // Strict mode
   declare(strict_types=1);
   function sum(int ...$ints) {
      return array_sum($ints);
   }
   print(sum(2, '3', 4.1));
   //Error.Has to be int


----------------

Return type declarations has been introduced. Return type declaration specifies the type of value that a function should return.
declare(strict_types = 1);
   function returnIntValue(int $value): int {
      return $value;
   }
   print(returnIntValue(5));

-----------------

 Null coalescing operator (??). Terinary operator with isset()
 $username = $_GET['username'] ?? 'not passed';
 // Equivalent code using ternary operator
 $username = isset($_GET['username']) ? $_GET['username'] : 'not passed';
