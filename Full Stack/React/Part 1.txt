React is fast. Apps made in React can handle complex updates and still feel quick and responsive.

React is modular. Instead of writing large, dense files of code, you can write many smaller, reusable files. React's modularity can be a beautiful solution to JavaScript's maintainability problems.

React is scalable. Large programs that display a lot of changing data are where React performs best.

React is flexible. You can use React for interesting projects that have nothing to do with making a web app. People are still figuring out React's potential. There's room to explore.

React is popular. While this reason has admittedly little to do with React's quality, the truth is that understanding React will make you more employable.

------

const h1 = <h1>Hello world</h1>;
<h1>Hello world</h1> is  called JSX, syntax extension.

If a JavaScript file contains JSX code, then that file will have to be compiled. That means that before the file reaches a web browser, a JSX compiler will translate any JSX into regular JavaScript.

JSX elements are treated as JavaScript expressions. They can go anywhere that JavaScript expressions can go.
That means that a JSX element can be saved in a variable, passed to a function, stored in an object or array and etc

Eg:
const myTeam = {
  center: <li>Benzo Walli</li>,
  powerForward: <li>Rasha Loa</li>,
  smallForward: <li>Tayshaun Dasmoto</li>,
  shootingGuard: <li>Colmar Cumberbatch</li>,
  pointGuard: <li>Femi Billon</li>
};

Attributes
Eg:
const p1=<p id="large">foo</p>

Nested elements

const myDiv = (
   <div>
    <h1>Hellow world</h1>
  </div>
 );


Rule :- a JSX expression must have exactly one outermost element.
const paragraphs = (
  <p>I am a paragraph.</p> 
  <p>I, too, am a paragraph.</p>
); -> Won't work

------

Rendering elements
Must have compiler to render

import React from 'react';
import ReactDOM from 'react-dom';

// Copy code here:
ReactDOM.render(<h1>Hello world</h1>, document.getElementById('app'));

----
ReactDOM is the name of a JavaScript library. This library contains several React-specific methods, all of which deal with the DOM in some way or another
ReactDOM.render() takes a JSX expression, creates a corresponding tree of DOM nodes, and adds that tree to the DOM. 
JSX in variables also will work

ReactDOM.render() only updates DOM elements that have changed.