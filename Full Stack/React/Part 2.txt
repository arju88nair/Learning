className instead of class
const myDiv=<div className="big">I AM A BIG DIV</div>

Tags should be closed <img/>

ReactDOM.render(
  <h1>{2 + 3}</h1>,
  document.getElementById('app')
);

----
const theBestString = 'tralalalala i am da best';

ReactDOM.render(<h1>{theBestString}</h1>, document.getElementById('app'));
----


function formatName(user) {
  return user.firstName + ' ' + user.lastName;
}

const user = {
  firstName: 'Harper',
  lastName: 'Perez'
};

const element = (
  <h1>
    Hello, {formatName(user)}!
  </h1>
);

ReactDOM.render(
  element,
  document.getElementById('root')
);


After compilation, JSX expressions become regular JavaScript function calls and evaluate to JavaScript objects.
This means that you can use JSX inside of if statements and for loops, assign it to variables, accept it as arguments, and return it from functions:

By default, React DOM escapes any values embedded in JSX before rendering them

React elements are immutable. Once you create an element, you canâ€™t change its children or attributes. An element is like a single frame in a movie: it represents the UI at a certain point in time.
--------

function tick() {
  const element = (
    <div>
      <h1>Hello, world!</h1>
      <h2>It is {new Date().toLocaleTimeString()}.</h2>
    </div>
  );
  ReactDOM.render(element, document.getElementById('root'));
}

setInterval(tick, 1000);
